name: "DEV DEPLOY"

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download Terraform Outputs Artifact
        run: |
          curl -o terraform-outputs.json ${{ vars.TERRAFORM_OUTUTS_JSON }}

      - name: Extract Values from JSON
        id: extract
        run: |
          # Use jq to extract the values from the JSON file
          db_endpoint=$(jq -r '.db_endpoint' terraform-outputs.json)
          ec2_hostname=$(jq -r '.ec2_hostname' dev-terraform-outputs.json)
          instance_public_ip=$(jq -r '.instance_public_ip' dev-terraform-outputs.json)
          ssh_private_key_url=$(jq -r '.ssh_private_key_url' dev-terraform-outputs.json)
          ssh_public_key=$(jq -r '.ssh_public_key' dev-terraform-outputs.json)

          # Set the extracted values as environment variables
          echo "DB_ENDPOINT=$db_endpoint" >> $GITHUB_ENV
          echo "EC2_HOSTNAME=$ec2_hostname" >> $GITHUB_ENV
          echo "INSTANCE_PUBLIC_IP=$instance_public_ip" >> $GITHUB_ENV
          echo "SSH_PRIVATE_KEY_URL=$ssh_private_key_url" >> $GITHUB_ENV
          echo "SSH_PUBLIC_KEY=$ssh_public_key" >> $GITHUB_ENV

      - name: Use Extracted Values
        run: |
          echo "DB Endpoint: $DB_ENDPOINT"
          echo "EC2 Hostname: $EC2_HOSTNAME"
          echo "Instance Public IP: $INSTANCE_PUBLIC_IP"
          echo "SSH Private Key URL: $SSH_PRIVATE_KEY_URL"
          echo "SSH Public Key: $SSH_PUBLIC_KEY"

      - name: Use Extracted Values
        run: |
          echo "SSH Private Key URL: $SSH_PRIVATE_KEY_URL"
          echo "EC2 Hostname: $EC2_HOSTNAME"
      
      - name: Download SSH Key from S3
        run: |
          curl -o deployer.pem "$SSH_PRIVATE_KEY_URL"
      
      - name: Set permissions for the SSH key
        run: chmod 600 deployer.pem
    
      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Host to known_hosts
        run: |
          ssh-keyscan -H "$EC2_HOSTNAME" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i deployer.pem -o StrictHostKeyChecking=no -t "ec2-user@$EC2_HOSTNAME" << 'EOF'
            sudo yum update -y
            docker ps
          EOF